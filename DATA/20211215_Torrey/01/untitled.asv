             %% =========================== Feature Detection ==================================
                    for viewId = 1%:length(images.Files)
                        viewId
                        I = imwarp(undistortImage(readimage(images, viewId), intrinsics), extrinsics_transformations(viewId), 'OutputView', panoramaView);
                        for pp = 1:length(Products)
                            %if rem(extract_Hz(hh),Products(pp).frameRate) == 0 % check if at correct extraction rate
                            %    if extract_Hz(hh) ~= Products(pp).frameRate  && rem(viewId-1, extract_Hz(hh)/Products(pp).frameRate)==0% if subsampled framerate
                                    
                                        if viewId == 1
                                            [xyz, Xout, Yout, Z] = getCoords(Products(pp), worldPose);
                                            Products(pp).localX = Xout;
                                            Products(pp).localY = Yout;
                                            Products(pp).localZ = Z;
                                            %find orientation of original image in panoramaView
                                            mask = imwarp(true(size(I,1),size(I,2)), extrinsics_transformations(viewId), 'OutputView', panoramaView);
                                            BW = boundarymask(mask);
                                            [row, col] = find(BW == 1, 1,'first');

                                            Products(pp).iP = round(world2img(xyz, pose2extr(worldPose), intrinsics))+[col row];
                                        end

                                            clear Irgb_temp
                                            for ii = 1:length(Products(pp).iP)
                                                %%  XXX change this to allow for bigger grid XXX
                                                    if any(Products(pp).iP(ii,:) <= 0) || any(Products(pp).iP(ii,[2 1]) >= panoramaView.ImageSize)
                                                        Irgb_temp(ii, :) = uint8([0 0 0]);
                                                    else
                                                        Irgb_temp(ii, :) = I(Products(pp).iP(ii,2), Products(pp).iP(ii,1),:);
                                                   end
                                            end
                                            if contains(Products(pp).type, 'Grid')
                                                Products(pp).Irgb_2d(viewId, :,:,:) = reshape(Irgb_temp, size(Products(pp).localX,1), size(Products(pp).localX,2), 3);
                                            else
                                                Products(pp).Irgb_2d(viewId, :,:) = Irgb_temp;
                                            end
            
                            %    end % if extract_Hz(hh) ~= Products(pp).frameRate  && rem(viewId-1, extract_Hz(hh)/Products(pp).frameRate)==0% if subsampled framerate
                          %  end % if rem(extract_Hz(hh),Products(pp).frameRate) == 0

                        end % for pp = 1:length(Products)
                    end % for viewId = 1:length(images.Files)
                Products = rmfield(Products, 'iP');

       